parameters:
- name: tags
  type: string
  default: '$(Build.BuildId)'
- name: dockerName
  type: string
  default: 'Dockers'   
- name: buildContext
  type: string
  default: '$(Build.SourcesDirectory)'
- name: images
  type: object
  default: []

jobs:
- job: BuildDockerFile${{ parameters.dockerName }} 
  displayName: Build Docker ${{ parameters.dockerName }} 
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET 9'
    inputs:
      packageType: 'sdk'
      version: 9.x
      performMultiLevelLookup: true
      includePreviewVersions: true

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: '**/*.sln'
      vstsFeed: '79f3c258-62f0-41df-9f52-8b916da9e6b8'
      arguments: '--no-restore'

  - task: replacetokens@5
    displayName: 'Replace tokens in Dockerfile'
    inputs:
      targetFiles: |
        **/Dockerfile
      encoding: 'auto'
      writeBOM: true
      actionOnMissing: 'fail'
      keepToken: false
      tokenPrefix: '#{'
      tokenSuffix: '}#'
      useLegacyPattern: false
      enableTelemetry: true


  - ${{ each image in parameters.images }}:
    - task: Docker@2
      displayName: 'Build and Push ${{ image.projectName }}'
      inputs:
        containerRegistry: 'containerRegistryName'
        repository: '${{ image.projectName }}'
        command: 'buildAndPush'
        Dockerfile: ${{ image.dockerfilePath }}
        tags: |
          ${{ parameters.tags }}
        buildContext: ${{ parameters.buildContext }}
  
      
